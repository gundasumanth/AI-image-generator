import React, { useState,useEffect } from 'react'
import {Card,Loader,Formfield} from "../components";
const RenderCard =({data,title})=>{

  if(data?.length>0){
  
    return (
      data.map((post) => <Card key={post._id} {...post} />)
    );
  }
  return <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
}
const Home = () => {
  const [loading,setLoading]=useState(false);
  const [searchText,setSearchText]=useState('');
  const [AllPosts, setAllPosts] = useState(null);
  const [SearchedResults, setSearchedResults] = useState(null)
  useEffect(()=>{
  const fetchPosts= async ()=>{
    setLoading(true)
   try {
    const response= await fetch("http://localhost:8080/post",{
        method:"GET",
        headers:{
          'Content-Type':'application/json'
        },
      
      })
        if(response.ok){
            const result=await response.json();
            
            setAllPosts(result.data.reverse());
            console.log(AllPosts)
        }
       
   } catch (error) {
    alert(error)
   } finally{
    setLoading(false)
   }
  }
  fetchPosts();
  },[]);
  const Change=(e)=>{
    setSearchText(e.target.value)
  }
  const searchHandle=()=>{
    setLoading(true)
    const searchResult= AllPosts.filter((item)=>item.name.toLowerCase().includes(searchText.toLowerCase())||
    item.prompt.toLowerCase().includes(searchText.toLowerCase()));
    console.log(searchResult);
    setSearchedResults(searchResult)
    setLoading(false)
  };
  return (
    <section className="max-w-7xl mx-auto mt-4">
      <div>
      <h1 className="font-extrabold text-[#222328] text-[32px]">The Community Showcase</h1>
      <p className="mt-2 text-#[666e75] text-[16px] max-w-[500px]">Browse through the imaginative collections of
      stunning images generated by DALL-E AI</p>
      </div>
      <div className="mt-16">
      <label for="search" className="block text-sm font-medium">
       Search here
      </label>
      <div className="flex items-center gap-2">
     
        <input  onChange={Change}name="search"  id="search" placeholder="search for the post" type="text"
          className="text-sm  border bg-gray-50 border-gray=500 text-gray-900 roudend-lg
        focus:ring-[#4649ff] focus:border-[#4649ff] outline-none block w-full h-6"
        />
        <button type='button' onClick={searchHandle} className="bg-[#1d4ed8] h-6 rounded-xl text-sm
         text-white px-2 ">Search</button>
        </div>
      </div>
      <div className="mt-10">
        {loading?
        (<div className="flex justify-center item-center">
         <Loader/>
        </div>):
        <>
          {searchText &&(
            <h2 className="font-medium text-#[666e75] text-xl mb-3">
              showing results of <span className="text-#[222323]">{searchText}</span>
            </h2>
          )}
          <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
            {searchText?
            (<RenderCard 
              data={SearchedResults}
              title="results not found"
            />):
            (<RenderCard
              data={AllPosts}
              title="all post not found"
            />)}
          </div>
        </>}
      </div>
    </section>
    

  )
}

export default Home